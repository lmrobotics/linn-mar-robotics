#include "WPILib.h"
#include "Drive.h"

/**
 * This is a demo program showing the use of the RobotDrive class.
 * The SampleRobot class is the base of a robot application that will automatically call your
 * Autonomous and OperatorControl methods at the right time as controlled by the switches on
 * the driver station or the field controls.
 *
 * WARNING: While it may look like a good choice to use for your code if you're inexperienced,
 * don't. Unless you know what you are doing, complex code will be much more difficult under
 * this system. Use IterativeRobot or Command-Based instead if you're new.
 */
class Robot: public SampleRobot
{
private:
	Joystick xbox; // only joystick
	Drive drive;
	Solenoid shifter;
	Compressor compressor;
	SmartDashboard *dash;

public:
	Robot() :
			xbox(0),		// as they are declared above.
			drive(0, 1),
			shifter(0,0),
			compressor(0)
	{
	}

	/**
	 * Drive left & right motors for 2 seconds then stop
	 */
	void Autonomous()
	{
	}

	/**
	 * Runs the motors with arcade steering.
	 */
	void OperatorControl()
	{
		while (IsOperatorControl() && IsEnabled())
		{
			bool r1_button = xbox.GetRawButton(6);
			bool A_button = xbox.GetRawButton(1);

			if(!compressor.GetPressureSwitchValue()){
				compressor.Start();
				printf("Running Compressor \n");
				dash->PutString("Compressor Status:", "Running");
			}
			else {
				compressor.Stop();
				printf("Compressor Stopped \n");
				dash->PutString("Compressor Status:", "Stopped");
			}

			if(A_button==true || r1_button==true){
				shifter.Set(false);
				printf("Shifted \n");
				dash->PutString("Solenoid Status:", "Shifted");

			}
			else {
				shifter.Set(true);
				printf("Not Shifted \n");
				dash->PutString("Solenoid Status:", "Not Shifted");
			}
			drive.TeleDrive(xbox.GetRawAxis(1),xbox.GetRawAxis(4));
			Wait(0.005);				// wait for a motor update time
		}
	}

	/**
	 * Runs during test mode
	 */
	void Test()
	{
	}
};

START_ROBOT_CLASS(Robot);
